<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptCoordinateWaitForDirection" xml:space="preserve">
    <value>👀 What direction are you facing?</value>
  </data>
  <data name="AnswerCode1" xml:space="preserve">
    <value>🟡</value>
  </data>
  <data name="AnswerCode2" xml:space="preserve">
    <value>🟢</value>
  </data>
  <data name="AnswerCode3" xml:space="preserve">
    <value>🔴</value>
  </data>
  <data name="AssignCode" xml:space="preserve">
    <value>🔢 Execute the following instructions and scan the QR Code you stop on:

&lt;code&gt;{0}&lt;/code&gt;</value>
  </data>
  <data name="AssignQuiz" xml:space="preserve">
    <value>❓ &lt;b&gt;{0}&lt;/b&gt;
{1}

🟡 {2}
🟢 {3}
🔴 {4}</value>
  </data>
  <data name="CannotHandle" xml:space="preserve">
    <value>Sorry, I don't understand.</value>
  </data>
  <data name="CertificateAskForName" xml:space="preserve">
    <value>📃 &lt;b&gt;Certificate&lt;/b&gt;
Send me a message with your full name, that will be put on the certificate of completion.</value>
  </data>
  <data name="CertificateAskForNameAgain" xml:space="preserve">
    <value>OK. Tell me your full name please.</value>
  </data>
  <data name="CertificateAskForNameConfirmation" xml:space="preserve">
    <value>Your name is &lt;i&gt;“{0}”&lt;/i&gt;. Correct?</value>
  </data>
  <data name="CertificateAskForNameInvalid" xml:space="preserve">
    <value>That nome doesn’t look right to me. Could you please write your full name?</value>
  </data>
  <data name="CertificateGenerationCaption" xml:space="preserve">
    <value>Your CodyMaze completion certificate</value>
  </data>
  <data name="CertificateGenerationDescriptionEvent" xml:space="preserve">
    <value>has successfully completed the “{0}” activity , interpreting sequences of instructions with repetition and selection constructs.</value>
  </data>
  <data name="CertificateGenerationDescriptionPlain" xml:space="preserve">
    <value>has successfully completed the “Hour of Code” activity with CodyMaze, interpreting sequences of instructions with repetition and selection constructs.</value>
  </data>
  <data name="CertificateGenerationError" xml:space="preserve">
    <value>🚨 Whoops, there was an error generating your certificate.</value>
  </data>
  <data name="CertificateGenerationProcessing" xml:space="preserve">
    <value>✒ Generating your certificate…</value>
  </data>
  <data name="CertificateGenerationReleaseDateFormat" xml:space="preserve">
    <value>D</value>
  </data>
  <data name="CertificateGenerationReleasedOn" xml:space="preserve">
    <value>Released on</value>
  </data>
  <data name="CertificateGenerationTitle" xml:space="preserve">
    <value>Certificate of completion</value>
  </data>
  <data name="CodeElse" xml:space="preserve">
    <value>else</value>
  </data>
  <data name="CodeForward" xml:space="preserve">
    <value>f</value>
  </data>
  <data name="CodeIf" xml:space="preserve">
    <value>if</value>
  </data>
  <data name="CodeLeft" xml:space="preserve">
    <value>l</value>
  </data>
  <data name="CodeNoStar" xml:space="preserve">
    <value>no star</value>
  </data>
  <data name="CodePathAhead" xml:space="preserve">
    <value>path ahead</value>
  </data>
  <data name="CodePathLeft" xml:space="preserve">
    <value>path left</value>
  </data>
  <data name="CodePathRight" xml:space="preserve">
    <value>path right</value>
  </data>
  <data name="CodeRight" xml:space="preserve">
    <value>r</value>
  </data>
  <data name="CodeStar" xml:space="preserve">
    <value>star</value>
  </data>
  <data name="CodeWhile" xml:space="preserve">
    <value>while</value>
  </data>
  <data name="ConfirmationNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="ConfirmationYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="CorrectAnswer" xml:space="preserve">
    <value>✔ &lt;b&gt;Correct!&lt;/b&gt;</value>
  </data>
  <data name="CorrectPosition" xml:space="preserve">
    <value>Very well! You're in the right spot ({0}) and you're looking {1}.</value>
  </data>
  <data name="CriticalError" xml:space="preserve">
    <value>🚨 &lt;b&gt;Error&lt;/b&gt;
I'm terribly sorry, something went wrong. Please restart the game using the /reset command.</value>
  </data>
  <data name="DirectionEast" xml:space="preserve">
    <value>East</value>
  </data>
  <data name="DirectionNorth" xml:space="preserve">
    <value>North</value>
  </data>
  <data name="DirectionSouth" xml:space="preserve">
    <value>South</value>
  </data>
  <data name="DirectionWest" xml:space="preserve">
    <value>West</value>
  </data>
  <data name="FacingEast" xml:space="preserve">
    <value>eastwards</value>
  </data>
  <data name="FacingNorth" xml:space="preserve">
    <value>northwards</value>
  </data>
  <data name="FacingSouth" xml:space="preserve">
    <value>southwards</value>
  </data>
  <data name="FacingWest" xml:space="preserve">
    <value>westwards</value>
  </data>
  <data name="GameComplete" xml:space="preserve">
    <value>&lt;b&gt;You have completed the game.&lt;/b&gt; Thank you for playing! 🎖 Use the /reset command if you want to play again.</value>
  </data>
  <data name="GameCompletePrompt" xml:space="preserve">
    <value>Do you want to play again? Use the /reset command.</value>
  </data>
  <data name="Help1" xml:space="preserve">
    <value>🤖 Hi! I am the &lt;b&gt;CodyMaze bot&lt;/b&gt; and I will guide you through the game. The game is composed of &lt;b&gt;13 challenges&lt;/b&gt;: for each one, I will send you new instructions that you must follow exactly in order to reach the final destination on the game’s chessboard.</value>
  </data>
  <data name="Help2" xml:space="preserve">
    <value>In order to start playing, please scan the QR Code on one of the outer squares of the chessboard (that is, any square along the first or last row, or the first or last column). You may use any QR Code scanner application to do so.</value>
  </data>
  <data name="Help3" xml:space="preserve">
    <value>The instructions I will send you may contain the following commands:
&lt;code&gt;f&lt;/code&gt;: move forward,
&lt;code&gt;l&lt;/code&gt;: turn left,
&lt;code&gt;r&lt;/code&gt;: turn right,
and other commands such as &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, and &lt;code&gt;while&lt;/code&gt;. Code blocks are indicated between braces (&lt;code&gt;{}&lt;/code&gt;) and can be repeated. For instance, &lt;code&gt;2{fr}&lt;/code&gt; tells you to move forward and turn right twice.</value>
  </data>
  <data name="LanguageCommandAsk" xml:space="preserve">
    <value>Which language should I speak?</value>
  </data>
  <data name="LanguageConfirm" xml:space="preserve">
    <value>Sure!</value>
  </data>
  <data name="QuestionnaireDone" xml:space="preserve">
    <value>Thank you! Your responses have been recorded.</value>
  </data>
  <data name="QuestionnaireEntry" xml:space="preserve">
    <value>📝 &lt;b&gt;Questionnaire&lt;/b&gt;
Before you leave, I have a couple of questions for you!</value>
  </data>
  <data name="QuestionnaireErrorAgeInvalid" xml:space="preserve">
    <value>Please, send me a message with the age as a number.</value>
  </data>
  <data name="QuestionnaireErrorAgeTooHigh" xml:space="preserve">
    <value>That number is a bit too high to be a valid age, I think.</value>
  </data>
  <data name="QuestionnaireErrorAgeTooLow" xml:space="preserve">
    <value>This doesn’t look like a valid age.</value>
  </data>
  <data name="QuestionnaireErrorAlternative" xml:space="preserve">
    <value>Please, answer to the question by clicking on one of the buttons.</value>
  </data>
  <data name="QuestionnaireErrorString" xml:space="preserve">
    <value>Please, send me a message with your answer to the question.</value>
  </data>
  <data name="ResetCommandOk" xml:space="preserve">
    <value>Let's start from the top! 👍 Scan one of the QR Codes on the outer squares of the chessboard to begin.</value>
  </data>
  <data name="StartCommand" xml:space="preserve">
    <value>🤖 Hello, I am the &lt;b&gt;CodyMaze bot&lt;/b&gt;! Please go to any of the grid’s outer squares and scan the QR Code you find there.</value>
  </data>
  <data name="StartCommandCoordInvalid" xml:space="preserve">
    <value>Hmmm, the command you sent is not valid. Try scanning the CodyMaze QR Code again.</value>
  </data>
  <data name="Victory" xml:space="preserve">
    <value>👏 Congratulations, you have completed CodyMaze!</value>
  </data>
  <data name="WaitForLocationFirstCoordinateWrong" xml:space="preserve">
    <value>Invalid start position: please go to any square of the grid's outer border and scan the QR Code you find there.</value>
  </data>
  <data name="WaitForLocationFirstSendDirection" xml:space="preserve">
    <value>🧭 Please turn {0}.</value>
  </data>
  <data name="WaitForLocationWrongDirection" xml:space="preserve">
    <value>❌ You should be facing &lt;b&gt;{0}&lt;/b&gt;. Please confirm clicking on the buttons above.</value>
  </data>
  <data name="WelcomeEventMessage" xml:space="preserve">
    <value>👋 Welcome to &lt;b&gt;{0}&lt;/b&gt;!</value>
  </data>
  <data name="WelcomeGame" xml:space="preserve">
    <value>🤖 Hello {0}, welcome to &lt;b&gt;{1}&lt;/b&gt;! Let's start the game.</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>👋 Welcome to &lt;b&gt;CodyMaze&lt;/b&gt;!</value>
  </data>
  <data name="WrongAnswerTryAgain" xml:space="preserve">
    <value>❌ &lt;b&gt;Wrong!&lt;/b&gt; Try again.</value>
  </data>
  <data name="WrongMove" xml:space="preserve">
    <value>🚩 &lt;b&gt;Wrong move!&lt;/b&gt;
Move back to position {0} and look {1}, then try executing the following instructions again:

&lt;code&gt;{2}&lt;/code&gt;</value>
  </data>
  <data name="WrongMoveWithoutCode" xml:space="preserve">
    <value>🚩 &lt;b&gt;Wrong move!&lt;/b&gt;
Move back to position {0} and look {1}, then try executing the instructions again.</value>
  </data>
</root>